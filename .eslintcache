[{"D:\\Projects\\test-landing\\src\\index.tsx":"1","D:\\Projects\\test-landing\\src\\pages\\Main\\index.tsx":"2","D:\\Projects\\test-landing\\src\\components\\Header\\index.tsx":"3","D:\\Projects\\test-landing\\src\\components\\Navigation\\index.tsx":"4","D:\\Projects\\test-landing\\src\\components\\Introduction\\index.tsx":"5","D:\\Projects\\test-landing\\src\\components\\Footer\\index.tsx":"6","D:\\Projects\\test-landing\\src\\components\\OurClients\\index.tsx":"7","D:\\Projects\\test-landing\\src\\components\\Separator\\index.tsx":"8","D:\\Projects\\test-landing\\src\\components\\Features\\index.tsx":"9","D:\\Projects\\test-landing\\src\\components\\FeatureCard\\index.tsx":"10","D:\\Projects\\test-landing\\src\\components\\FeatureLabel\\index.tsx":"11","D:\\Projects\\test-landing\\src\\components\\Logo\\index.tsx":"12","D:\\Projects\\test-landing\\src\\components\\Social\\index.tsx":"13","D:\\Projects\\test-landing\\src\\constants\\navigation.ts":"14","D:\\Projects\\test-landing\\src\\constants\\contacts.ts":"15","D:\\Projects\\test-landing\\src\\components\\ClientCard\\index.tsx":"16","D:\\Projects\\test-landing\\src\\constants\\clients.ts":"17","D:\\Projects\\test-landing\\src\\constants\\introduction.ts":"18","D:\\Projects\\test-landing\\src\\constants\\features.ts":"19","D:\\Projects\\test-landing\\src\\constants\\social.tsx":"20"},{"size":239,"mtime":1612092929364,"results":"21","hashOfConfig":"22"},{"size":465,"mtime":1612093398613,"results":"23","hashOfConfig":"22"},{"size":415,"mtime":1612096666759,"results":"24","hashOfConfig":"22"},{"size":3786,"mtime":1612094231755,"results":"25","hashOfConfig":"22"},{"size":1389,"mtime":1612093731650,"results":"26","hashOfConfig":"22"},{"size":2495,"mtime":1612093837005,"results":"27","hashOfConfig":"22"},{"size":638,"mtime":1612093656073,"results":"28","hashOfConfig":"22"},{"size":161,"mtime":1611823461536,"results":"29","hashOfConfig":"22"},{"size":536,"mtime":1612093928177,"results":"30","hashOfConfig":"22"},{"size":536,"mtime":1612093944942,"results":"31","hashOfConfig":"22"},{"size":253,"mtime":1611838546686,"results":"32","hashOfConfig":"22"},{"size":719,"mtime":1612094127657,"results":"33","hashOfConfig":"22"},{"size":278,"mtime":1612094537835,"results":"34","hashOfConfig":"22"},{"size":487,"mtime":1612092791414,"results":"35","hashOfConfig":"22"},{"size":224,"mtime":1612096275980,"results":"36","hashOfConfig":"22"},{"size":349,"mtime":1612094069776,"results":"37","hashOfConfig":"22"},{"size":1348,"mtime":1612093600734,"results":"38","hashOfConfig":"22"},{"size":316,"mtime":1612093719211,"results":"39","hashOfConfig":"22"},{"size":842,"mtime":1612093903455,"results":"40","hashOfConfig":"22"},{"size":3067,"mtime":1612094517273,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"15vdc9f",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\test-landing\\src\\index.tsx",[],["87","88"],"D:\\Projects\\test-landing\\src\\pages\\Main\\index.tsx",[],"D:\\Projects\\test-landing\\src\\components\\Header\\index.tsx",[],"D:\\Projects\\test-landing\\src\\components\\Navigation\\index.tsx",["89","90"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useSpring, useTransition, useChain, animated } from \"react-spring\";\nimport { NAVIGATION_ITEMS } from \"../../constants/navigation\";\nimport \"./Navigation.scss\";\n\nconst DESKTOP_BOUNDARY = 992;\nconst HEADER_HEIGHT = 115;\n\nconst checkIsDesktop = (): boolean => window.innerWidth >= DESKTOP_BOUNDARY;\n\nexport const Navigation = () => {\n  const [isDesktop, setIsDesktop] = useState(() => checkIsDesktop());\n  const [isMenuOpen, setMenuState] = useState(false);\n\n  const navRef = useRef(null);\n  const linkRef = useRef(null);\n  const contactUsRef = useRef(null);\n\n  const topLineStyle = useSpring({\n    transform: isMenuOpen\n      ? \"translate(0px, 14px) rotate(-45deg)\"\n      : \"translate(0px, 0px) rotate(0deg)\",\n  });\n\n  const midLineStyle = useSpring({\n    opacity: isMenuOpen ? 0 : 1,\n  });\n\n  const botLineStyle = useSpring({\n    transform: isMenuOpen\n      ? \"translate(0px, -14px) rotate(45deg)\"\n      : \"translate(0px, 0px) rotate(0deg)\",\n  });\n\n  const menuStyle = useSpring({\n    from: {\n      height: 0,\n    },\n    to: {\n      height: isMenuOpen ? window.innerHeight - HEADER_HEIGHT : 0,\n    },\n    ref: navRef,\n  });\n\n  const linkTransitions = useTransition(\n    isMenuOpen ? NAVIGATION_ITEMS : [],\n    (item) => item.id,\n    {\n      trail: 400 / NAVIGATION_ITEMS.length,\n      from: { opacity: 0, transform: \"translateY(-20px)\" },\n      enter: { opacity: 1, transform: \"translateY(0)\" },\n      leave: { opacity: 0, transform: \"translateY(-20px)\" },\n      ref: linkRef,\n    }\n  );\n\n  const contactUsStyle = useSpring({\n    from: { opacity: 0, transform: \"translateY(-20px)\" },\n    to: {\n      opacity: isMenuOpen ? 1 : 0,\n      transform: isMenuOpen ? \"translateY(0)\" : \"translateY(-20px)\",\n    },\n    ref: contactUsRef,\n  });\n\n  useChain(\n    isMenuOpen\n      ? [navRef, linkRef, contactUsRef]\n      : [contactUsRef, linkRef, navRef],\n    [0, 0.3, 0.7]\n  );\n\n  const handleResize = useCallback(() => {\n    const isResizedDesktop = checkIsDesktop();\n    setIsDesktop(isResizedDesktop);\n    if (isResizedDesktop) {\n      setMenuState(false);\n    }\n  }, [setIsDesktop]);\n\n  const handleBurgerClick = () => {\n    setMenuState(!isMenuOpen);\n    if (!isMenuOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"initial\";\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [handleResize]);\n\n  const contactButton = <button className=\"contact-button\">Contact us</button>;\n\n  if (isDesktop) {\n    return (\n      <>\n        <ul className=\"navigation\">\n          {NAVIGATION_ITEMS.map(({ id, title, classes }) => (\n            <li key={id}>\n              <a className={classes} href=\"#\" rel=\"noopener noreferer\">\n                {title}\n              </a>\n            </li>\n          ))}\n        </ul>\n        {contactButton}\n      </>\n    );\n  }\n  return (\n    <>\n      <button className=\"burger-button\" onClick={handleBurgerClick}>\n        <animated.span style={topLineStyle} />\n        <animated.span style={midLineStyle} />\n        <animated.span style={botLineStyle} />\n      </button>\n      <animated.div className=\"navigation-mobile\" style={menuStyle}>\n        <ul className=\"navigation\">\n          {linkTransitions.map(({ item: { title, classes }, key, props }) => (\n            <animated.li key={key} style={props}>\n              <a className={classes} href=\"#\" rel=\"noopener noreferer\">\n                {title}\n              </a>\n            </animated.li>\n          ))}\n          <animated.li style={contactUsStyle}>\n            {contactButton}\n          </animated.li>\n        </ul>\n      </animated.div>\n    </>\n  );\n};\n","D:\\Projects\\test-landing\\src\\components\\Introduction\\index.tsx",[],"D:\\Projects\\test-landing\\src\\components\\Footer\\index.tsx",["91","92","93"],"import * as React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Logo, LogoType } from \"../Logo\";\nimport { Social } from \"../Social\";\nimport { NAVIGATION_ITEMS } from \"../../constants/navigation\";\nimport { CONTACTS, ContactItem } from \"../../constants/contacts\";\nimport \"./Footer.scss\";\n\nexport const Footer = () => (\n  <footer className=\"footer-wrapper\">\n    <Container>\n      <Row>\n        <Col xs={12} sm={6} md={{ order: 1, span: 6 }} lg={3}>\n          <div className=\"footer-logo-section\">\n            <div>\n              <Logo type={LogoType.white} />\n              <p>© Copyright 2021</p>\n            </div>\n            <div className=\"company-policies\">\n              <a href=\"#\" rel=\"noopener nofollow\">\n                Terms of Service\n              </a>\n              <a href=\"#\" rel=\"noopener nofollow\">\n                Privacy Policy\n              </a>\n            </div>\n          </div>\n        </Col>\n        <Col\n          xs={12}\n          sm={{ order: 2, span: 6 }}\n          md={{ order: 2, span: 6 }}\n          lg={{ order: 2, span: 3 }}\n        >\n          <div className=\"footer-navigation-wrapper\">\n            <h5 className=\"footer-section-title\">Site Navigation</h5>\n            <ul className=\"footer-navigation\">\n              {NAVIGATION_ITEMS.map(({ id, title }) => (\n                <li key={id}>\n                  <a href=\"#\" rel=\"noopener noreferer\">\n                    {title}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </Col>\n        <Col\n          xs={12}\n          sm={{ order: 4, span: 6 }}\n          md={{ order: 4, span: 6 }}\n          lg={{ order: 3, span: 3 }}\n        >\n          <div className=\"contact-us\">\n            <h5 className=\"footer-section-title\">Contact Us</h5>\n            <p className=\"address\">\n              CD PROJEKT S.A. ul. Jagiellonska 74 03-301 Warszawa\n            </p>\n          </div>\n        </Col>\n        <Col\n          xs={12}\n          sm={{ order: 3, span: 6 }}\n          md={{ order: 3, span: 6 }}\n          lg={{ order: 4, span: 3 }}\n        >\n          <Social />\n          <div className=\"contacts\">\n            <a href={`tel:${CONTACTS[ContactItem.phone]}`}>\n              {CONTACTS[ContactItem.phone]}\n            </a>\n            <a href={`mailto:${CONTACTS[ContactItem.email]}`}>\n              {CONTACTS[ContactItem.email]}\n            </a>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  </footer>\n);\n","D:\\Projects\\test-landing\\src\\components\\OurClients\\index.tsx",[],"D:\\Projects\\test-landing\\src\\components\\Separator\\index.tsx",[],"D:\\Projects\\test-landing\\src\\components\\Features\\index.tsx",[],"D:\\Projects\\test-landing\\src\\components\\FeatureCard\\index.tsx",[],"D:\\Projects\\test-landing\\src\\components\\FeatureLabel\\index.tsx",[],"D:\\Projects\\test-landing\\src\\components\\Logo\\index.tsx",["94"],"import React, { useCallback } from \"react\";\nimport logoDarkImage from \"../../assets/images/logos/logo_dark.svg\";\nimport logoWhiteImage from \"../../assets/images/logos/logo_white.svg\";\n\nexport enum LogoType {\n  dark = \"dark\",\n  white = \"white\",\n}\n\ninterface ILogoProps {\n  type: LogoType;\n}\n\nexport const Logo: React.FC<ILogoProps> = ({ type }) => {\n  const getLogoImg = useCallback((): string | undefined => {\n    switch (type) {\n      case LogoType.dark:\n        return logoDarkImage;\n      case LogoType.white:\n        return logoWhiteImage;\n      default:\n        return undefined;\n    }\n  }, [type]);\n\n  return (\n    <a href=\"#\" rel=\"noopener nofollow\">\n      <img src={getLogoImg()} alt=\"logo\" />\n    </a>\n  );\n};\n","D:\\Projects\\test-landing\\src\\components\\Social\\index.tsx",["95"],"import React from \"react\";\nimport { SOCIALS } from \"../../constants/social\";\nimport \"./Social.scss\";\n\nexport const Social = () => (\n  <div className=\"social\">\n    {SOCIALS.map(({ id, image, name }) => (\n      <a key={id} href=\"#\">\n        {image}\n      </a>\n    ))}\n  </div>\n);\n","D:\\Projects\\test-landing\\src\\constants\\navigation.ts",[],"D:\\Projects\\test-landing\\src\\constants\\contacts.ts",[],"D:\\Projects\\test-landing\\src\\components\\ClientCard\\index.tsx",[],"D:\\Projects\\test-landing\\src\\constants\\clients.ts",[],"D:\\Projects\\test-landing\\src\\constants\\introduction.ts",[],"D:\\Projects\\test-landing\\src\\constants\\features.ts",[],"D:\\Projects\\test-landing\\src\\constants\\social.tsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":106,"column":15,"nodeType":"102","endLine":106,"endColumn":72},{"ruleId":"100","severity":1,"message":"101","line":127,"column":15,"nodeType":"102","endLine":127,"endColumn":72},{"ruleId":"100","severity":1,"message":"101","line":20,"column":15,"nodeType":"102","endLine":20,"endColumn":51},{"ruleId":"100","severity":1,"message":"101","line":23,"column":15,"nodeType":"102","endLine":23,"endColumn":51},{"ruleId":"100","severity":1,"message":"101","line":40,"column":19,"nodeType":"102","endLine":40,"endColumn":56},{"ruleId":"100","severity":1,"message":"101","line":27,"column":5,"nodeType":"102","endLine":27,"endColumn":41},{"ruleId":"100","severity":1,"message":"101","line":8,"column":7,"nodeType":"102","endLine":8,"endColumn":28},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]